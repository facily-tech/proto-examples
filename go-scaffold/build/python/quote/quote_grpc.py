# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: quote/quote.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import quote.quote_pb2


class QuoteServiceBase(abc.ABC):

    @abc.abstractmethod
    async def FindByID(self, stream: 'grpclib.server.Stream[quote.quote_pb2.FindRequest, quote.quote_pb2.FindResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Upsert(self, stream: 'grpclib.server.Stream[quote.quote_pb2.UpsertRequest, quote.quote_pb2.UpsertResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Delete(self, stream: 'grpclib.server.Stream[quote.quote_pb2.DeleteRequest, quote.quote_pb2.Error]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/quote.QuoteService/FindByID': grpclib.const.Handler(
                self.FindByID,
                grpclib.const.Cardinality.UNARY_UNARY,
                quote.quote_pb2.FindRequest,
                quote.quote_pb2.FindResponse,
            ),
            '/quote.QuoteService/Upsert': grpclib.const.Handler(
                self.Upsert,
                grpclib.const.Cardinality.UNARY_UNARY,
                quote.quote_pb2.UpsertRequest,
                quote.quote_pb2.UpsertResponse,
            ),
            '/quote.QuoteService/Delete': grpclib.const.Handler(
                self.Delete,
                grpclib.const.Cardinality.UNARY_UNARY,
                quote.quote_pb2.DeleteRequest,
                quote.quote_pb2.Error,
            ),
        }


class QuoteServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.FindByID = grpclib.client.UnaryUnaryMethod(
            channel,
            '/quote.QuoteService/FindByID',
            quote.quote_pb2.FindRequest,
            quote.quote_pb2.FindResponse,
        )
        self.Upsert = grpclib.client.UnaryUnaryMethod(
            channel,
            '/quote.QuoteService/Upsert',
            quote.quote_pb2.UpsertRequest,
            quote.quote_pb2.UpsertResponse,
        )
        self.Delete = grpclib.client.UnaryUnaryMethod(
            channel,
            '/quote.QuoteService/Delete',
            quote.quote_pb2.DeleteRequest,
            quote.quote_pb2.Error,
        )
